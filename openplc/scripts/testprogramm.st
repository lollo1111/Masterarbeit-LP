FUNCTION setFloor : INT
  VAR_INPUT
    point : INT;
    check : BOOL;
  END_VAR

  IF check THEN
    setFloor := point;
    return;
  END_IF;
END_FUNCTION

FUNCTION setFloorWithPosition : INT
  VAR_INPUT
    check : BOOL;
    pickup : BOOL;
    sensor : BOOL;
    endsensor : BOOL;
  END_VAR

  IF pickup THEN
    setFloorWithPosition := 890;
    return;
  ELSIF check THEN
    IF sensor THEN
      setFloorWithPosition := 450;
      return;
    ELSE
      setFloorWithPosition := 80;
      return;
    END_IF;
  ELSIF endsensor THEN
    setFloorWithPosition := 450;
    return;
  END_IF;
END_FUNCTION

FUNCTION setZ : INT
  VAR_INPUT
    first_check : BOOL;
    second_check : BOOL;
  END_VAR

  IF first_check THEN
    setZ := 880;
    return;
  ELSIF second_check THEN
    setZ := 1000;
    return;
  ELSE
    setZ := 0;
    return;
  END_IF;
END_FUNCTION

FUNCTION setX : INT
  VAR_INPUT
    first_check : BOOL;
  END_VAR

  IF first_check THEN
    setX := 800;
    return;
  ELSE
    setX := 0;
    return;
  END_IF;
END_FUNCTION

FUNCTION setBox : INT
  VAR_INPUT
    sensor : BOOL;
    box : INT;
  END_VAR

  IF sensor THEN
    IF box = 1 THEN
      setBox := 1;
      return;
    ELSIF box = 2 THEN
      setBox := 2;
      return;
    ELSIF box = 4 THEN
      setBox := 4;
      return;
    ELSE
      setBox := 0;
      return;
    END_IF;
  END_IF;
END_FUNCTION

FUNCTION discharge : INT
  VAR_INPUT
    check : BOOL;
  END_VAR

  IF check THEN
    discharge := 600;
    return;
  END_IF;
END_FUNCTION

FUNCTION fill : INT
  VAR_INPUT
    check : BOOL;
  END_VAR

  IF check THEN
    fill := 600;
    return;
  END_IF;
END_FUNCTION

PROGRAM program0
  VAR
    start_rfid_sensor AT %IX100.0 : BOOL;
    direction_limit_front AT %IX100.1 : BOOL;
    direction_rfid_sensor AT %IX100.2 : BOOL;
    machining_A_trigger AT %IX100.6 : BOOL;
    machining_B_remover_sensor AT %IX100.7 : BOOL;
    start_conveyor AT %QX100.0 : BOOL;
    direction_roll_forward AT %QX100.1 : BOOL;
    direction_stopper AT %QX100.2 : BOOL;
    direction_turn AT %QX100.3 : BOOL;
    direction_conveyor_forward_1_3 AT %QX100.4 : BOOL;
    direction_conveyor_forward_2_3 AT %QX100.5 : BOOL;
    start_counter AT %QW100 : INT := 0;
    elevator_1_set_point AT %QW101 : INT;
    elevator_2_set_point AT %QW102 : INT;
    pick_setPositionX AT %QW103 : INT;
    pick_setPositionZ AT %QW104 : INT;
    pack_emitter_base AT %QW105 : INT;
    pack_emitter_part AT %QW106 : INT := 0;
    tank_fillValve AT %QW107 : INT := 0;
    tank_dischargeValve AT %QW108 : INT := 0;
    start_emitter_base AT %QW109 : INT := 1;
    start_emitter_part AT %QW110 : INT := 32;
  END_VAR
  VAR
    maximum : INT := 10000;
    CTUD0 : CTUD;
    dummy_box : INT := 1;
    quality_acceptable_counter : INT := 0;
    quality_unacceptable_counter : INT := 0;
    elevator_1_dummy : INT := 0;
    pusher_dummy : INT := 2;
    option_3_counter : INT := 0;
    option_1_counter : INT := 0;
    option_2_counter : INT := 0;
    first_floor : INT := 450;
    const_zero : INT := 0;
    const_two : INT := 2;
    SR0 : SR;
  END_VAR
  VAR
    direction_limit_90 AT %IX100.3 : BOOL;
    direction_end_sensor_left AT %IX100.4 : BOOL;
    direction_end_sensor_forward AT %IX100.5 : BOOL;
  END_VAR
  VAR
    SR1 : SR;
    SR2 : SR;
  END_VAR
  VAR
    spawn_pallett_trigger_sensor AT %IX101.0 : BOOL;
    spawn_pallett_end_sensor AT %IX101.1 : BOOL;
    machining_B_trigger AT %IX101.2 : BOOL;
    spawn_pallett_sensor AT %IX101.3 : BOOL;
    elevator_1_right_limit AT %IX101.4 : BOOL;
    elevator_1_left_limit AT %IX101.5 : BOOL;
    first_floor_trigger_sensor AT %IX101.6 : BOOL;
    first_floor_end_sensor AT %IX101.7 : BOOL;
    elevator_2_right_limit AT %IX102.0 : BOOL := True;
    elevator_2_left_limit AT %IX102.1 : BOOL;
    elevator_2_end_sensor AT %IX102.2 : BOOL;
    cross_sensor AT %IX102.3 : BOOL;
    second_floor_trigger_sensor AT %IX102.4 : BOOL;
    second_floor_end_sensor AT %IX102.5 : BOOL;
    pick_itemDetected AT %IX102.6 : BOOL;
    pick_sensor AT %IX102.7 : BOOL;
    cross_center_sensor AT %IX103.0 : BOOL;
    join_enter_left_sensor AT %IX103.1 : BOOL;
    join_enter_right_sensor AT %IX103.2 : BOOL;
    varnishing_trigger_sensor AT %IX103.3 : BOOL;
    check_direction_limit_back AT %IX103.4 : BOOL;
    check_direction_limit_front AT %IX103.5 : BOOL;
    check_direction_limit_0 AT %IX103.6 : BOOL;
    check_direction_limit_90 AT %IX103.7 : BOOL;
    check_out_sensor AT %IX104.0 : BOOL;
    repeat_out_sensor AT %IX104.1 : BOOL;
    check_rfid_sensor AT %IX104.2 : BOOL;
    before_check_direction_sensor AT %IX104.3 : BOOL;
    pack_start_sensor AT %IX104.4 : BOOL;
    pack_rfid_sensor AT %IX104.5 : BOOL;
    pack_end_sensor AT %IX104.6 : BOOL;
    pack_trigger_sensor AT %IX104.7 : BOOL;
    after_pack_sensor AT %IX105.0 : BOOL;
    logistic_2_pusher_sensor AT %IX105.1 : BOOL;
    logistic_1_pusher_sensor AT %IX105.2 : BOOL;
    logistic_2_pusher_front_limit AT %IX105.3 : BOOL;
    logistic_1_pusher_front_limit AT %IX105.4 : BOOL;
    logistic_option_1_task_sensor AT %IX105.5 : BOOL;
    logistic_option_2_task_sensor AT %IX105.6 : BOOL;
    logistic_option_3_task_sensor AT %IX105.7 : BOOL;
    end_sensor AT %IX106.0 : BOOL;
    logistic_option_2_out_sensor AT %IX106.1 : BOOL;
    logistic_option_1_out_sensor AT %IX106.2 : BOOL;
    after_logistic_sensor AT %IX106.3 : BOOL;
    varnishing_rfid_sensor AT %IX106.4 : BOOL;
    start_sensor AT %IX106.5 : BOOL;
    spawn_pallett_conveyor AT %QX100.6 : BOOL;
    spawn_pallett_emit AT %QX100.7 : BOOL;
    machining_B_remover AT %QX101.0 : BOOL;
    direction_conveyor_left_1_3 AT %QX101.1 : BOOL;
    direction_conveyor_left_2_3 AT %QX101.2 : BOOL;
    direction_conveyor_left_3_3 AT %QX101.3 : BOOL;
    machining_A_remover AT %QX101.4 : BOOL;
    direction_conveyor_forward_3_3 AT %QX101.5 : BOOL;
    spawn_pallett_stopper AT %QX101.6 : BOOL;
    spawn_curve_1_2 AT %QX101.7 : BOOL;
    spawn_curve_2_2 AT %QX102.0 : BOOL;
    elevator_1_forward AT %QX102.1 : BOOL;
    first_floor_conveyor_1_8 AT %QX102.2 : BOOL;
    first_floor_conveyor_2_8 AT %QX102.3 : BOOL;
    first_floor_conveyor_3_8 AT %QX102.4 : BOOL;
    first_floor_conveyor_4_8 AT %QX102.5 : BOOL;
    first_floor_conveyor_5_8 AT %QX102.6 : BOOL;
    first_floor_conveyor_6_8 AT %QX102.7 : BOOL;
    first_floor_conveyor_7_8 AT %QX103.0 : BOOL;
    first_floor_conveyor_8_8 AT %QX103.1 : BOOL;
    first_floor_stopper AT %QX103.2 : BOOL;
    elevator_2_forward AT %QX103.3 : BOOL;
    before_cross_left_conveyor AT %QX103.4 : BOOL;
    second_floor_conveyor_1_8 AT %QX103.5 : BOOL;
    second_floor_conveyor_2_8 AT %QX103.6 : BOOL;
    second_floor_conveyor_3_8 AT %QX103.7 : BOOL;
    second_floor_conveyor_4_8 AT %QX104.0 : BOOL;
    second_floor_conveyor_5_8 AT %QX104.1 : BOOL;
    second_floor_conveyor_6_8 AT %QX104.2 : BOOL;
    second_floor_conveyor_7_8 AT %QX104.3 : BOOL;
    second_floor_conveyor_8_8 AT %QX104.4 : BOOL;
    second_floor_emitter AT %QX104.5 : BOOL;
    second_floor_remover AT %QX104.6 : BOOL;
    second_floor_stopper AT %QX104.7 : BOOL;
    pick_grab AT %QX105.0 : BOOL;
    pick_rotate_clockwise AT %QX105.1 : BOOL;
    pick_rotate_counterclockwise AT %QX105.2 : BOOL;
    after_pick_emitter AT %QX105.3 : BOOL;
    pick_chain_forward AT %QX105.4 : BOOL;
    after_pick_conveyor_1_3 AT %QX105.5 : BOOL;
    after_pick_conveyor_2_3 AT %QX105.6 : BOOL;
    after_pick_conveyor_3_3 AT %QX105.7 : BOOL;
    pick_stopper AT %QX106.0 : BOOL;
    before_cross_left_stopper AT %QX106.1 : BOOL;
    before_cross_right_stopper AT %QX106.2 : BOOL;
    join_chain_forward AT %QX106.3 : BOOL;
    join_chain_left AT %QX106.4 : BOOL;
    join_chain_back AT %QX106.5 : BOOL;
    before_varnishing_conveyor_1_2 AT %QX106.6 : BOOL;
    before_varnishing_conveyor_2_2 AT %QX106.7 : BOOL;
    varnishing_conveyor AT %QX107.0 : BOOL;
    after_varnishing_conveyor AT %QX107.1 : BOOL;
    before_check_stopper AT %QX107.2 : BOOL;
    after_check_stopper AT %QX107.3 : BOOL;
    before_quality_conveyor_1_2 AT %QX107.4 : BOOL;
    before_quality_conveyor_2_2 AT %QX107.5 : BOOL;
    after_quality_conveyor_1_3 AT %QX107.6 : BOOL;
    after_quality_conveyor_2_3 AT %QX107.7 : BOOL;
    after_quality_conveyor_3_3 AT %QX108.0 : BOOL;
    check_direction_turn AT %QX108.1 : BOOL;
    check_direction_roll_forward AT %QX108.2 : BOOL;
    check_direction_roll_back AT %QX108.3 : BOOL;
    before_pack_conveyor_1_3 AT %QX108.4 : BOOL;
    before_pack_conveyor_2_3 AT %QX108.5 : BOOL;
    before_pack_conveyor_3_3 AT %QX108.6 : BOOL;
    pack_conveyor AT %QX108.7 : BOOL;
    pack_stopper AT %QX109.0 : BOOL;
    after_pack_conveyor AT %QX109.1 : BOOL;
    pack_remover AT %QX109.2 : BOOL;
    pack_emitter AT %QX109.3 : BOOL;
    scale_forward AT %QX109.4 : BOOL;
    logistic_pusher_conveyor AT %QX109.5 : BOOL;
    logistic_option_3_conveyor_1_4 AT %QX109.6 : BOOL;
    logistic_option_3_conveyor_2_4 AT %QX109.7 : BOOL;
    logistic_option_3_conveyor_3_4 AT %QX110.0 : BOOL;
    logistic_option_3_conveyor_4_4 AT %QX110.1 : BOOL;
    logistic_1_pusher AT %QX110.2 : BOOL;
    logistic_2_pusher AT %QX110.3 : BOOL;
    logistic_option_1_conveyor_1_3 AT %QX110.4 : BOOL;
    logistic_option_1_conveyor_2_3 AT %QX110.5 : BOOL;
    logistic_option_1_conveyor_3_3 AT %QX110.6 : BOOL;
    logistic_option_2_conveyor_1_1 AT %QX110.7 : BOOL;
    after_logistic_remover AT %QX111.0 : BOOL;
    after_logistic_conveyor AT %QX111.1 : BOOL;
    varnishing_stopper_1_2 AT %QX111.2 : BOOL;
    varnishing_stopper_2_2 AT %QX111.3 : BOOL;
    machining_B_progress AT %IW100 : INT;
    elevator_1_position AT %IW101 : INT;
    elevator_2_position AT %IW102 : INT;
    machining_A_progress AT %IW103 : INT;
    pick_positionX AT %IW104 : INT;
    pick_positionZ AT %IW105 : INT;
    height_light_array_emitter AT %IW106 : INT;
    tank_levelMeter AT %IW107 : INT;
    direction_rfid_read AT %IW108 : INT;
    check_rfid_read AT %IW109 : INT;
  END_VAR
  VAR
    const_done : INT := 50;
    CTUD1 : CTUD;
    left_counter : INT := 0;
    pack_counter : INT := 0;
    pack_passed_counter : INT := 0;
    current_pack_counter : INT := 0;
    spawn_counter : INT := 0;
    spawn_counter_a : INT := 0;
    after_elevator_counter : INT := 0;
    varnishing_counter : INT := 0;
    first_floor_counter : INT := 0;
    second_floor_counter : INT := 0;
    CTUD2 : CTUD;
    SR3 : SR;
    SR4 : SR;
    SR5 : SR;
    CTUD3 : CTUD;
    SR6 : SR;
    SR7 : SR;
    SR10 : SR;
    CTUD4 : CTUD;
    SR11 : SR;
    SR9 : SR;
    SR12 : SR;
    CTUD5 : CTUD;
    SR13 : SR;
    SR14 : SR;
    SR15 : SR;
    SR16 : SR;
    SR17 : SR;
    SR18 : SR;
    CTUD6 : CTUD;
    SR19 : SR;
    SR26 : SR;
    CTUD7 : CTUD;
    CTUD8 : CTUD;
    SR22 : SR;
    SR23 : SR;
    SR24 : SR;
    SR20 : SR;
    SR25 : SR;
    SR27 : SR;
    SR21 : SR;
    SR28 : SR;
    CTUD9 : CTUD;
    CTUD10 : CTUD;
    SR29 : SR;
    CTUD11 : CTUD;
    CTUD12 : CTUD;
    SR30 : SR;
    CTUD13 : CTUD;
    SR31 : SR;
    CTUD14 : CTUD;
    SR32 : SR;
    SR33 : SR;
    TOF0 : TOF;
    tank_elapsedTime : TIME;
    CTUD15 : CTUD;
    GT28_OUT : BOOL;
    GE32_OUT : BOOL;
    OR7_OUT : BOOL;
    EQ705_OUT : BOOL;
    NOT45_OUT : BOOL;
    AND37_OUT : BOOL;
    OR9_OUT : BOOL;
    EQ703_OUT : BOOL;
    AND10_OUT : BOOL;
    EQ707_OUT : BOOL;
    NOT49_OUT : BOOL;
    AND51_OUT : BOOL;
    EQ709_OUT : BOOL;
    AND18_OUT : BOOL;
    EQ86_OUT : BOOL;
    R_TRIG1 : R_TRIG;
    OR4_OUT : BOOL;
    R_TRIG2 : R_TRIG;
    GT61_OUT : BOOL;
    EQ90_OUT : BOOL;
    R_TRIG3 : R_TRIG;
    NOT114_OUT : BOOL;
    R_TRIG4 : R_TRIG;
    EQ710_OUT : BOOL;
    AND81_OUT : BOOL;
    R_TRIG5 : R_TRIG;
    R_TRIG6 : R_TRIG;
    EQ104_OUT : BOOL;
    NOT113_OUT : BOOL;
    AND109_OUT : BOOL;
    setFloor110_OUT : INT;
    ADD115_OUT : INT;
    EQ118_OUT : BOOL;
    OR132_OUT : BOOL;
    NOT103_OUT : BOOL;
    EQ129_OUT : BOOL;
    AND131_OUT : BOOL;
    NE121_OUT : BOOL;
    AND134_OUT : BOOL;
    OR135_OUT : BOOL;
    R_TRIG7 : R_TRIG;
    ADD204_OUT : INT;
    EQ206_OUT : BOOL;
    NOT209_OUT : BOOL;
    AND208_OUT : BOOL;
    R_TRIG8 : R_TRIG;
    GT181_OUT : BOOL;
    NOT187_OUT : BOOL;
    ADD189_OUT : INT;
    LT196_OUT : BOOL;
    AND258_OUT : BOOL;
    OR259_OUT : BOOL;
    AND262_OUT : BOOL;
    NOT216_OUT : BOOL;
    NOT253_OUT : BOOL;
    ADD254_OUT : INT;
    EQ256_OUT : BOOL;
    AND251_OUT : BOOL;
    OR260_OUT : BOOL;
    NOT280_OUT : BOOL;
    AND269_OUT : BOOL;
    AND277_OUT : BOOL;
    setFloorWithPosition248_OUT : INT;
    ADD270_OUT : INT;
    EQ272_OUT : BOOL;
    EQ243_OUT : BOOL;
    NOT125_OUT : BOOL;
    AND245_OUT : BOOL;
    ADD235_OUT : INT;
    EQ238_OUT : BOOL;
    AND240_OUT : BOOL;
    OR242_OUT : BOOL;
    NOT162_OUT : BOOL;
    ADD82_OUT : INT;
    EQ59_OUT : BOOL;
    AND241_OUT : BOOL;
    EQ128_OUT : BOOL;
    AND161_OUT : BOOL;
    OR246_OUT : BOOL;
    ADD33_OUT : INT;
    NE29_OUT : BOOL;
    R_TRIG9 : R_TRIG;
    R_TRIG10 : R_TRIG;
    GT694_OUT : BOOL;
    R_TRIG11 : R_TRIG;
    GT697_OUT : BOOL;
    AND696_OUT : BOOL;
    R_TRIG12 : R_TRIG;
    GT290_OUT : BOOL;
    GT297_OUT : BOOL;
    NOT320_OUT : BOOL;
    NOT305_OUT : BOOL;
    AND319_OUT : BOOL;
    NOT295_OUT : BOOL;
    AND288_OUT : BOOL;
    setZ317_OUT : INT;
    GE322_OUT : BOOL;
    ADD329_OUT : INT;
    GE330_OUT : BOOL;
    EQ333_OUT : BOOL;
    AND334_OUT : BOOL;
    ADD314_OUT : INT;
    GE315_OUT : BOOL;
    setX338_OUT : INT;
    NOT340_OUT : BOOL;
    GT341_OUT : BOOL;
    LT347_OUT : BOOL;
    AND346_OUT : BOOL;
    AND344_OUT : BOOL;
    NOT356_OUT : BOOL;
    ADD352_OUT : INT;
    GE353_OUT : BOOL;
    AND357_OUT : BOOL;
    R_TRIG13 : R_TRIG;
    GT700_OUT : BOOL;
    AND699_OUT : BOOL;
    R_TRIG14 : R_TRIG;
    NOT365_OUT : BOOL;
    GT367_OUT : BOOL;
    LT376_OUT : BOOL;
    AND373_OUT : BOOL;
    AND369_OUT : BOOL;
    GT360_OUT : BOOL;
    NOT400_OUT : BOOL;
    AND399_OUT : BOOL;
    R_TRIG15 : R_TRIG;
    AND554_OUT : BOOL;
    R_TRIG16 : R_TRIG;
    GT408_OUT : BOOL;
    NOT427_OUT : BOOL;
    NOT428_OUT : BOOL;
    AND426_OUT : BOOL;
    NOT418_OUT : BOOL;
    OR423_OUT : BOOL;
    NOT419_OUT : BOOL;
    OR422_OUT : BOOL;
    NOT481_OUT : BOOL;
    AND552_OUT : BOOL;
    NOT543_OUT : BOOL;
    AND523_OUT : BOOL;
    OR551_OUT : BOOL;
    OR533_OUT : BOOL;
    GT445_OUT : BOOL;
    NOT448_OUT : BOOL;
    AND447_OUT : BOOL;
    EQ711_OUT : BOOL;
    AND458_OUT : BOOL;
    OR480_OUT : BOOL;
    EQ713_OUT : BOOL;
    AND491_OUT : BOOL;
    R_TRIG17 : R_TRIG;
    R_TRIG18 : R_TRIG;
    EQ715_OUT : BOOL;
    NOT493_OUT : BOOL;
    AND469_OUT : BOOL;
    R_TRIG19 : R_TRIG;
    NOT557_OUT : BOOL;
    AND514_OUT : BOOL;
    R_TRIG20 : R_TRIG;
    GT506_OUT : BOOL;
    GT507_OUT : BOOL;
    AND540_OUT : BOOL;
    EQ717_OUT : BOOL;
    AND459_OUT : BOOL;
    OR532_OUT : BOOL;
    GT566_OUT : BOOL;
    R_TRIG21 : R_TRIG;
    R_TRIG22 : R_TRIG;
    R_TRIG23 : R_TRIG;
    R_TRIG24 : R_TRIG;
    GT463_OUT : BOOL;
    setBox572_OUT : INT;
    NE575_OUT : BOOL;
    AND577_OUT : BOOL;
    GT583_OUT : BOOL;
    R_TRIG25 : R_TRIG;
    OR617_OUT : BOOL;
    R_TRIG26 : R_TRIG;
    GT588_OUT : BOOL;
    EQ593_OUT : BOOL;
    AND595_OUT : BOOL;
    R_TRIG27 : R_TRIG;
    GT600_OUT : BOOL;
    EQ604_OUT : BOOL;
    AND606_OUT : BOOL;
    EQ548_OUT : BOOL;
    AND550_OUT : BOOL;
    R_TRIG28 : R_TRIG;
    AND641_OUT : BOOL;
    R_TRIG29 : R_TRIG;
    R_TRIG30 : R_TRIG;
    AND654_OUT : BOOL;
    R_TRIG31 : R_TRIG;
    GT614_OUT : BOOL;
    GT625_OUT : BOOL;
    GT630_OUT : BOOL;
    GT651_OUT : BOOL;
    OR628_OUT : BOOL;
    discharge659_OUT : INT;
    GT686_OUT : BOOL;
    LT671_OUT : BOOL;
    AND684_OUT : BOOL;
    EQ680_OUT : BOOL;
    LT663_OUT : BOOL;
    AND678_OUT : BOOL;
    OR677_OUT : BOOL;
    EQ661_OUT : BOOL;
    AND666_OUT : BOOL;
    fill672_OUT : INT;
    GT648_OUT : BOOL;
    GT674_OUT : BOOL;
    GT669_OUT : BOOL;
    OR675_OUT : BOOL;
  END_VAR

  GT28_OUT := GT(start_counter, 0);
  start_conveyor := GT28_OUT;
  GE32_OUT := GE(start_counter, 2);
  direction_stopper := GE32_OUT;
  OR7_OUT := OR(direction_limit_90, direction_rfid_sensor);
  EQ705_OUT := EQ(direction_rfid_read, 0);
  NOT45_OUT := NOT(direction_limit_90);
  AND37_OUT := AND(direction_limit_front, EQ705_OUT, NOT45_OUT);
  OR9_OUT := OR(AND37_OUT, machining_A_trigger, direction_end_sensor_left);
  SR0(S1 := OR7_OUT, R := OR9_OUT);
  direction_roll_forward := SR0.Q1;
  EQ703_OUT := EQ(direction_rfid_read, 0);
  AND10_OUT := AND(direction_limit_front, EQ703_OUT);
  direction_turn := AND10_OUT;
  direction_conveyor_forward_2_3 := direction_conveyor_forward_1_3;
  EQ707_OUT := EQ(direction_rfid_read, 0);
  NOT49_OUT := NOT(EQ707_OUT);
  AND51_OUT := AND(direction_limit_front, NOT49_OUT);
  SR1(S1 := AND51_OUT, R := machining_A_trigger);
  direction_conveyor_forward_1_3 := SR1.Q1;
  direction_conveyor_forward_3_3 := direction_conveyor_forward_2_3;
  direction_conveyor_left_2_3 := direction_conveyor_left_1_3;
  EQ709_OUT := EQ(direction_rfid_read, 0);
  AND18_OUT := AND(direction_limit_front, EQ709_OUT);
  EQ86_OUT := EQ(left_counter, 0);
  SR2(S1 := AND18_OUT, R := EQ86_OUT);
  direction_conveyor_left_1_3 := SR2.Q1;
  direction_conveyor_left_3_3 := direction_conveyor_left_2_3;
  machining_B_remover := machining_B_remover_sensor;
  machining_A_remover := direction_end_sensor_forward;
  R_TRIG1(CLK := start_sensor);
  OR4_OUT := OR(direction_end_sensor_forward, direction_end_sensor_left);
  R_TRIG2(CLK := OR4_OUT);
  CTUD0(CU := R_TRIG1.Q, CD := R_TRIG2.Q, PV := 10000);
  start_counter := CTUD0.CV;
  GT61_OUT := GT(machining_B_progress, const_done);
  spawn_pallett_emit := GT61_OUT;
  EQ90_OUT := EQ(spawn_counter, 0);
  SR3(S1 := spawn_pallett_emit, R := EQ90_OUT);
  spawn_pallett_conveyor := SR3.Q1;
  R_TRIG3(CLK := spawn_pallett_trigger_sensor);
  NOT114_OUT := NOT(elevator_1_right_limit);
  R_TRIG4(CLK := NOT114_OUT);
  CTUD2(CU := R_TRIG3.Q, CD := R_TRIG4.Q, PV := 10000);
  spawn_counter := CTUD2.CV;
  spawn_curve_1_2 := spawn_pallett_conveyor;
  spawn_curve_2_2 := spawn_curve_1_2;
  SR4(S1 := spawn_pallett_trigger_sensor, R := spawn_pallett_sensor);
  spawn_pallett_stopper := SR4.Q1;
  EQ710_OUT := EQ(direction_rfid_read, 0);
  AND81_OUT := AND(EQ710_OUT, direction_limit_front);
  R_TRIG5(CLK := AND81_OUT);
  R_TRIG6(CLK := machining_B_trigger);
  CTUD1(CU := R_TRIG5.Q, CD := R_TRIG6.Q, PV := 10000);
  left_counter := CTUD1.CV;
  EQ104_OUT := EQ(elevator_1_dummy, 0);
  NOT113_OUT := NOT(elevator_1_right_limit);
  AND109_OUT := AND(EQ104_OUT, NOT113_OUT);
  setFloor110_OUT := setFloor(first_floor, AND109_OUT);
  elevator_1_set_point := setFloor110_OUT;
  ADD115_OUT := ADD(elevator_1_position, 1);
  EQ118_OUT := EQ(ADD115_OUT, elevator_1_set_point);
  OR132_OUT := OR(EQ118_OUT, spawn_pallett_end_sensor);
  NOT103_OUT := NOT(elevator_1_right_limit);
  EQ129_OUT := EQ(elevator_1_position, 0);
  AND131_OUT := AND(NOT103_OUT, EQ129_OUT);
  NE121_OUT := NE(elevator_1_position, 0);
  AND134_OUT := AND(elevator_1_right_limit, NE121_OUT);
  OR135_OUT := OR(AND131_OUT, AND134_OUT);
  SR5(S1 := OR132_OUT, R := OR135_OUT);
  elevator_1_forward := SR5.Q1;
  R_TRIG7(CLK := first_floor_trigger_sensor);
  ADD204_OUT := ADD(elevator_2_position, 1);
  EQ206_OUT := EQ(ADD204_OUT, 450);
  NOT209_OUT := NOT(elevator_2_right_limit);
  AND208_OUT := AND(EQ206_OUT, NOT209_OUT);
  R_TRIG8(CLK := AND208_OUT);
  CTUD3(CU := R_TRIG7.Q, CD := R_TRIG8.Q, PV := 10000);
  first_floor_counter := CTUD3.CV;
  first_floor_conveyor_2_8 := first_floor_conveyor_1_8;
  first_floor_conveyor_3_8 := first_floor_conveyor_2_8;
  first_floor_conveyor_4_8 := first_floor_conveyor_3_8;
  first_floor_conveyor_5_8 := first_floor_conveyor_4_8;
  first_floor_conveyor_6_8 := first_floor_conveyor_5_8;
  first_floor_conveyor_7_8 := first_floor_conveyor_6_8;
  first_floor_conveyor_8_8 := first_floor_conveyor_7_8;
  GT181_OUT := GT(first_floor_counter, 0);
  first_floor_conveyor_1_8 := GT181_OUT;
  NOT187_OUT := NOT(elevator_2_right_limit);
  ADD189_OUT := ADD(elevator_2_position, 1);
  LT196_OUT := LT(ADD189_OUT, 450);
  AND258_OUT := AND(NOT187_OUT, LT196_OUT);
  OR259_OUT := OR(first_floor_end_sensor, AND258_OUT);
  AND262_OUT := AND(elevator_2_end_sensor, elevator_2_right_limit);
  NOT216_OUT := NOT(elevator_2_right_limit);
  NOT253_OUT := NOT(elevator_2_forward);
  ADD254_OUT := ADD(elevator_2_position, 1);
  EQ256_OUT := EQ(ADD254_OUT, 450);
  AND251_OUT := AND(NOT216_OUT, NOT253_OUT, EQ256_OUT);
  OR260_OUT := OR(AND262_OUT, AND251_OUT);
  SR6(S1 := OR259_OUT, R := OR260_OUT);
  NOT280_OUT := NOT(elevator_2_right_limit);
  AND269_OUT := AND(second_floor_end_sensor, NOT280_OUT);
  SR10(S1 := AND269_OUT, R := second_floor_remover);
  AND277_OUT := AND(elevator_2_end_sensor, elevator_2_right_limit);
  SR11(S1 := AND277_OUT, R := first_floor_end_sensor);
  setFloorWithPosition248_OUT := setFloorWithPosition(SR6.Q1, SR10.Q1, elevator_2_right_limit, SR11.Q1);
  elevator_2_set_point := setFloorWithPosition248_OUT;
  ADD270_OUT := ADD(elevator_2_position, 1);
  EQ272_OUT := EQ(ADD270_OUT, 890);
  second_floor_remover := EQ272_OUT;
  EQ243_OUT := EQ(elevator_2_position, 80);
  NOT125_OUT := NOT(elevator_2_right_limit);
  AND245_OUT := AND(EQ243_OUT, NOT125_OUT);
  ADD235_OUT := ADD(elevator_2_position, 1);
  EQ238_OUT := EQ(450, ADD235_OUT);
  AND240_OUT := AND(first_floor_end_sensor, EQ238_OUT);
  OR242_OUT := OR(AND245_OUT, AND240_OUT);
  NOT162_OUT := NOT(elevator_2_right_limit);
  ADD82_OUT := ADD(elevator_2_position, 1);
  EQ59_OUT := EQ(450, ADD82_OUT);
  AND241_OUT := AND(NOT162_OUT, EQ59_OUT);
  EQ128_OUT := EQ(elevator_2_position, 80);
  AND161_OUT := AND(EQ128_OUT, elevator_2_right_limit);
  OR246_OUT := OR(AND241_OUT, AND161_OUT);
  SR7(S1 := OR242_OUT, R := OR246_OUT);
  elevator_2_forward := SR7.Q1;
  ADD33_OUT := ADD(1, elevator_2_position);
  NE29_OUT := NE(ADD33_OUT, 450);
  first_floor_stopper := NE29_OUT;
  R_TRIG9(CLK := second_floor_trigger_sensor);
  R_TRIG10(CLK := second_floor_end_sensor);
  CTUD4(CU := R_TRIG9.Q, CD := R_TRIG10.Q, PV := 10000);
  second_floor_counter := CTUD4.CV;
  GT694_OUT := GT(after_elevator_counter, 0);
  before_cross_left_conveyor := GT694_OUT;
  R_TRIG11(CLK := elevator_2_end_sensor);
  GT697_OUT := GT(after_elevator_counter, 0);
  AND696_OUT := AND(GT697_OUT, cross_sensor);
  R_TRIG12(CLK := AND696_OUT);
  CTUD15(CU := R_TRIG11.Q, CD := R_TRIG12.Q, PV := 10000);
  after_elevator_counter := CTUD15.CV;
  second_floor_conveyor_2_8 := second_floor_conveyor_1_8;
  GT290_OUT := GT(second_floor_counter, 0);
  second_floor_conveyor_1_8 := GT290_OUT;
  second_floor_conveyor_3_8 := second_floor_conveyor_2_8;
  second_floor_conveyor_4_8 := second_floor_conveyor_3_8;
  second_floor_stopper := second_floor_conveyor_1_8;
  second_floor_conveyor_5_8 := second_floor_conveyor_4_8;
  second_floor_emitter := first_floor_trigger_sensor;
  second_floor_conveyor_6_8 := second_floor_conveyor_5_8;
  second_floor_conveyor_7_8 := second_floor_conveyor_6_8;
  second_floor_conveyor_8_8 := second_floor_conveyor_7_8;
  GT297_OUT := GT(machining_A_progress, const_done);
  after_pick_emitter := GT297_OUT;
  NOT320_OUT := NOT(pick_grab);
  NOT305_OUT := NOT(pick_itemDetected);
  AND319_OUT := AND(pick_sensor, NOT320_OUT, NOT305_OUT);
  NOT295_OUT := NOT(pick_grab);
  AND288_OUT := AND(pick_itemDetected, NOT295_OUT);
  setZ317_OUT := setZ(AND319_OUT, AND288_OUT);
  pick_setPositionZ := setZ317_OUT;
  GE322_OUT := GE(pick_positionZ, 930);
  ADD329_OUT := ADD(pick_positionX, 1);
  GE330_OUT := GE(ADD329_OUT, 800);
  SR9(S1 := GE322_OUT, R := GE330_OUT);
  pick_grab := SR9.Q1;
  EQ333_OUT := EQ(pick_positionZ, 0);
  AND334_OUT := AND(EQ333_OUT, pick_grab);
  pick_rotate_counterclockwise := AND334_OUT;
  ADD314_OUT := ADD(pick_positionX, 1);
  GE315_OUT := GE(ADD314_OUT, 800);
  SR12(S1 := pick_rotate_counterclockwise, R := GE315_OUT);
  setX338_OUT := setX(SR12.Q1);
  pick_setPositionX := setX338_OUT;
  NOT340_OUT := NOT(pick_grab);
  GT341_OUT := GT(pick_positionX, 0);
  LT347_OUT := LT(pick_positionX, 20);
  AND346_OUT := AND(GT341_OUT, LT347_OUT);
  AND344_OUT := AND(NOT340_OUT, AND346_OUT);
  pick_rotate_clockwise := AND344_OUT;
  NOT356_OUT := NOT(pick_grab);
  ADD352_OUT := ADD(pick_positionX, 1);
  GE353_OUT := GE(ADD352_OUT, 800);
  AND357_OUT := AND(NOT356_OUT, GE353_OUT);
  R_TRIG13(CLK := AND357_OUT);
  GT700_OUT := GT(spawn_counter_a, 0);
  AND699_OUT := AND(cross_center_sensor, GT700_OUT);
  R_TRIG14(CLK := AND699_OUT);
  CTUD5(CU := R_TRIG13.Q, CD := R_TRIG14.Q, PV := 10000);
  spawn_counter_a := CTUD5.CV;
  NOT365_OUT := NOT(pick_grab);
  GT367_OUT := GT(pick_positionX, 0);
  LT376_OUT := LT(pick_positionX, 20);
  AND373_OUT := AND(GT367_OUT, LT376_OUT);
  AND369_OUT := AND(NOT365_OUT, AND373_OUT);
  SR13(S1 := after_pick_emitter, R := AND369_OUT);
  pick_stopper := SR13.Q1;
  after_pick_conveyor_1_3 := pick_chain_forward;
  GT360_OUT := GT(spawn_counter_a, 0);
  pick_chain_forward := GT360_OUT;
  after_pick_conveyor_2_3 := after_pick_conveyor_1_3;
  after_pick_conveyor_3_3 := after_pick_conveyor_2_3;
  SR15(S1 := cross_center_sensor, R := cross_sensor);
  join_chain_left := SR15.Q1;
  SR14(S1 := join_enter_right_sensor, R := cross_center_sensor);
  join_chain_back := SR14.Q1;
  before_varnishing_conveyor_1_2 := join_chain_left;
  SR16(S1 := join_enter_left_sensor, R := cross_center_sensor);
  join_chain_forward := SR16.Q1;
  SR17(S1 := join_enter_left_sensor, R := cross_sensor);
  before_cross_right_stopper := SR17.Q1;
  NOT400_OUT := NOT(before_cross_left_stopper);
  AND399_OUT := AND(NOT400_OUT, join_enter_right_sensor);
  SR18(S1 := AND399_OUT, R := cross_sensor);
  before_cross_left_stopper := SR18.Q1;
  R_TRIG15(CLK := varnishing_trigger_sensor);
  SR21(S1 := before_check_direction_sensor, R := check_direction_limit_90);
  AND554_OUT := AND(SR21.Q1, check_direction_limit_back);
  R_TRIG16(CLK := AND554_OUT);
  CTUD6(CU := R_TRIG15.Q, CD := R_TRIG16.Q, PV := 10000);
  varnishing_counter := CTUD6.CV;
  GT408_OUT := GT(varnishing_counter, 0);
  before_varnishing_conveyor_2_2 := GT408_OUT;
  varnishing_conveyor := before_varnishing_conveyor_2_2;
  after_varnishing_conveyor := varnishing_conveyor;
  NOT427_OUT := NOT(check_direction_limit_90);
  NOT428_OUT := NOT(check_direction_limit_back);
  AND426_OUT := AND(NOT427_OUT, NOT428_OUT);
  SR19(S1 := check_direction_roll_back, R := AND426_OUT);
  NOT418_OUT := NOT(check_direction_limit_0);
  OR423_OUT := OR(SR19.Q1, NOT418_OUT);
  after_check_stopper := OR423_OUT;
  NOT419_OUT := NOT(check_direction_limit_0);
  SR23(S1 := check_rfid_sensor, R := check_direction_limit_90);
  OR422_OUT := OR(NOT419_OUT, SR23.Q1);
  before_check_stopper := OR422_OUT;
  NOT481_OUT := NOT(check_direction_limit_0);
  SR27(S1 := before_check_direction_sensor, R := NOT481_OUT);
  AND552_OUT := AND(SR27.Q1, check_direction_limit_back);
  NOT543_OUT := NOT(check_direction_limit_0);
  SR20(S1 := check_rfid_sensor, R := NOT543_OUT);
  AND523_OUT := AND(check_direction_limit_front, SR20.Q1);
  OR551_OUT := OR(AND552_OUT, AND523_OUT);
  OR533_OUT := OR(repeat_out_sensor, check_out_sensor);
  SR22(S1 := OR551_OUT, R := OR533_OUT);
  check_direction_turn := SR22.Q1;
  GT445_OUT := GT(varnishing_counter, 0);
  NOT448_OUT := NOT(before_check_stopper);
  AND447_OUT := AND(GT445_OUT, NOT448_OUT, check_direction_limit_front);
  EQ711_OUT := EQ(check_rfid_read, 1);
  AND458_OUT := AND(EQ711_OUT, check_direction_limit_90);
  SR26(S1 := AND458_OUT, R := repeat_out_sensor);
  OR480_OUT := OR(AND447_OUT, SR26.Q1);
  check_direction_roll_back := OR480_OUT;
  EQ713_OUT := EQ(check_rfid_read, 0);
  AND491_OUT := AND(check_direction_limit_90, EQ713_OUT);
  R_TRIG17(CLK := AND491_OUT);
  R_TRIG18(CLK := pack_rfid_sensor);
  CTUD7(CU := R_TRIG17.Q, CD := R_TRIG18.Q, PV := 10000);
  quality_acceptable_counter := CTUD7.CV;
  before_pack_conveyor_2_3 := before_pack_conveyor_1_3;
  before_pack_conveyor_3_3 := before_pack_conveyor_2_3;
  EQ715_OUT := EQ(check_rfid_read, 0);
  NOT493_OUT := NOT(EQ715_OUT);
  AND469_OUT := AND(check_direction_limit_90, NOT493_OUT);
  R_TRIG19(CLK := AND469_OUT);
  NOT557_OUT := NOT(check_direction_limit_0);
  SR28(S1 := check_rfid_sensor, R := NOT557_OUT);
  AND514_OUT := AND(check_direction_limit_front, SR28.Q1);
  R_TRIG20(CLK := AND514_OUT);
  CTUD8(CU := R_TRIG19.Q, CD := R_TRIG20.Q, PV := 10000);
  quality_unacceptable_counter := CTUD8.CV;
  before_quality_conveyor_2_2 := before_quality_conveyor_1_2;
  after_quality_conveyor_1_3 := before_quality_conveyor_2_2;
  after_quality_conveyor_2_3 := after_quality_conveyor_1_3;
  after_quality_conveyor_3_3 := after_quality_conveyor_2_3;
  GT506_OUT := GT(quality_unacceptable_counter, 0);
  before_quality_conveyor_1_2 := GT506_OUT;
  GT507_OUT := GT(quality_acceptable_counter, 0);
  before_pack_conveyor_1_3 := GT507_OUT;
  AND540_OUT := AND(check_direction_limit_0, check_rfid_sensor);
  SR24(S1 := AND540_OUT, R := check_direction_limit_front);
  EQ717_OUT := EQ(check_rfid_read, 0);
  AND459_OUT := AND(check_direction_limit_90, EQ717_OUT);
  SR25(S1 := AND459_OUT, R := check_out_sensor);
  OR532_OUT := OR(SR24.Q1, SR25.Q1);
  check_direction_roll_forward := OR532_OUT;
  GT566_OUT := GT(pack_counter, 0);
  pack_conveyor := GT566_OUT;
  R_TRIG21(CLK := pack_start_sensor);
  R_TRIG22(CLK := after_pack_sensor);
  CTUD9(CU := R_TRIG21.Q, CD := R_TRIG22.Q, PV := 10000);
  pack_counter := CTUD9.CV;
  after_pack_conveyor := pack_conveyor;
  R_TRIG23(CLK := pack_trigger_sensor);
  R_TRIG24(CLK := pack_end_sensor);
  CTUD10(CU := R_TRIG23.Q, CD := R_TRIG24.Q, PV := 10000);
  current_pack_counter := CTUD10.CV;
  GT463_OUT := GT(current_pack_counter, 0);
  pack_stopper := GT463_OUT;
  SR29(S1 := pack_trigger_sensor, R := pack_end_sensor);
  setBox572_OUT := setBox(SR29.Q1, dummy_box);
  pack_emitter_part := setBox572_OUT;
  pack_emitter := pack_remover;
  NE575_OUT := NE(pack_emitter_part, 0);
  AND577_OUT := AND(pack_trigger_sensor, NE575_OUT);
  pack_remover := AND577_OUT;
  GT583_OUT := GT(height_light_array_emitter, 0);
  R_TRIG25(CLK := GT583_OUT);
  OR617_OUT := OR(logistic_option_1_task_sensor, logistic_option_2_task_sensor, logistic_option_3_task_sensor);
  R_TRIG26(CLK := OR617_OUT);
  CTUD11(CU := R_TRIG25.Q, CD := R_TRIG26.Q, PV := 10000);
  pack_passed_counter := CTUD11.CV;
  logistic_pusher_conveyor := scale_forward;
  GT588_OUT := GT(pack_passed_counter, 0);
  scale_forward := GT588_OUT;
  EQ593_OUT := EQ(pusher_dummy, 3);
  AND595_OUT := AND(logistic_2_pusher_sensor, EQ593_OUT);
  R_TRIG27(CLK := AND595_OUT);
  CTUD12(CU := R_TRIG27.Q, PV := 10000);
  option_3_counter := CTUD12.CV;
  GT600_OUT := GT(option_3_counter, 0);
  logistic_option_3_conveyor_1_4 := GT600_OUT;
  logistic_option_3_conveyor_2_4 := logistic_option_3_conveyor_1_4;
  logistic_option_3_conveyor_3_4 := logistic_option_3_conveyor_2_4;
  logistic_option_3_conveyor_4_4 := logistic_option_3_conveyor_3_4;
  EQ604_OUT := EQ(pusher_dummy, 1);
  AND606_OUT := AND(logistic_1_pusher_sensor, EQ604_OUT);
  SR30(S1 := AND606_OUT, R := logistic_1_pusher_front_limit);
  logistic_1_pusher := SR30.Q1;
  EQ548_OUT := EQ(pusher_dummy, 2);
  AND550_OUT := AND(logistic_2_pusher_sensor, EQ548_OUT);
  SR31(S1 := AND550_OUT, R := logistic_2_pusher_front_limit);
  logistic_2_pusher := SR31.Q1;
  R_TRIG28(CLK := logistic_1_pusher_front_limit);
  SR32(S1 := logistic_option_1_out_sensor, R := after_logistic_remover);
  AND641_OUT := AND(SR32.Q1, end_sensor);
  R_TRIG29(CLK := AND641_OUT);
  CTUD13(CU := R_TRIG28.Q, CD := R_TRIG29.Q, PV := 10000);
  option_1_counter := CTUD13.CV;
  R_TRIG30(CLK := logistic_2_pusher_front_limit);
  SR33(S1 := logistic_option_2_out_sensor, R := after_logistic_remover);
  AND654_OUT := AND(SR33.Q1, end_sensor);
  R_TRIG31(CLK := AND654_OUT);
  CTUD14(CU := R_TRIG30.Q, CD := R_TRIG31.Q, PV := 10000);
  option_2_counter := CTUD14.CV;
  GT614_OUT := GT(option_1_counter, 0);
  logistic_option_1_conveyor_1_3 := GT614_OUT;
  logistic_option_1_conveyor_2_3 := logistic_option_1_conveyor_1_3;
  logistic_option_1_conveyor_3_3 := logistic_option_1_conveyor_2_3;
  GT625_OUT := GT(option_2_counter, 0);
  logistic_option_2_conveyor_1_1 := GT625_OUT;
  GT630_OUT := GT(option_1_counter, 0);
  GT651_OUT := GT(option_2_counter, 0);
  OR628_OUT := OR(GT630_OUT, GT651_OUT);
  after_logistic_conveyor := OR628_OUT;
  after_logistic_remover := end_sensor;
  TOF0(IN := varnishing_rfid_sensor, PT := T#2500ms);
  discharge659_OUT := discharge(TOF0.Q);
  tank_dischargeValve := discharge659_OUT;
  tank_elapsedTime := TOF0.ET;
  GT686_OUT := GT(varnishing_counter, 0);
  LT671_OUT := LT(tank_levelMeter, 200);
  AND684_OUT := AND(GT686_OUT, LT671_OUT);
  EQ680_OUT := EQ(varnishing_counter, 0);
  LT663_OUT := LT(tank_levelMeter, 600);
  AND678_OUT := AND(EQ680_OUT, LT663_OUT);
  OR677_OUT := OR(AND684_OUT, AND678_OUT);
  EQ661_OUT := EQ(tank_dischargeValve, 0);
  AND666_OUT := AND(OR677_OUT, EQ661_OUT);
  fill672_OUT := fill(AND666_OUT);
  tank_fillValve := fill672_OUT;
  GT648_OUT := GT(tank_dischargeValve, 0);
  varnishing_stopper_2_2 := GT648_OUT;
  GT674_OUT := GT(tank_dischargeValve, 0);
  GT669_OUT := GT(tank_fillValve, 0);
  OR675_OUT := OR(GT674_OUT, GT669_OUT);
  varnishing_stopper_1_2 := OR675_OUT;
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : program0;
  END_RESOURCE
END_CONFIGURATION
